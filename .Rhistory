hi
print("hi")
input("what's your name")
calculate_protein_weight <- function(protein_sequence) {
#Split the sequence into amino acids
amino_acids <- unlist(strsplit(protein_sequence, ""))
#Check if amino acids are valid
invalid_aa <- setdiff(amino_acids, names(amino_acid_masses))
if (length(invalid_aa) > 0) {
stop(paste("Invalid amino acids found:", paste(invalid_aa, collapse = ", ")))
}
# Calculate the molecular weight
molecular_weight <- sum(amino_acid_masses[amino_acids])
return(molecular_weight)
}
install.packages("stringr")
amino_acid_masses <- c(
A = 89.09,  # Alanine
R = 174.20, # Arginine
N = 132.12, # Asparagine
D = 133.10, # Aspartic acid
C = 121.15, # Cysteine
E = 147.13, # Glutamic acid
Q = 146.15, # Glutamine
G = 75.07,  # Glycine
H = 155.16, # Histidine
I = 131.17, # Isoleucine
L = 131.17, # Leucine
K = 146.19, # Lysine
M = 149.21, # Methionine
F = 165.19, # Phenylalanine
P = 115.13, # Proline
S = 105.09, # Serine
T = 119.12, # Threonine
W = 204.23, # Tryptophan
Y = 181.19, # Tyrosine
V = 117.15  # Valine
)
library(stringr)
protein_sequence <- toupper(protein_sequence)
protein_weight <- calculate_protein_weight(protein_sequence)
protein_weight <- calculate_protein_weight(protein_sequence)
libbrary(stringr)
# Define amino acid masses
amino_acid_masses <- c(
A = 89.09,  R = 174.20, N = 132.12, D = 133.10, C = 121.15,
E = 147.13, Q = 146.15, G = 75.07,  H = 155.16, I = 131.17,
L = 131.17, K = 146.19, M = 149.21, F = 165.19, P = 115.13,
S = 105.09, T = 119.12, W = 204.23, Y = 181.19, V = 117.15
)
ABABA
# Test with a sample protein sequence
protein_sequence <- readline(prompt = "Enter your protein sequence: ")
protein_sequence <- readline(prompt = "Enter the protein sequence: ")
tryCatch({
protein_weight <- calculate_protein_weight(protein_sequence)
cat("Molecular weight of the protein:", protein_weight, "Daltons\n")
}, error = function(e) {
cat("Error:", e$message, "\n")
})
return(weight)
# Validate amino acids
invalid_aa <- setdiff(amino_acids, names(amino_acid_masses))
cat("Enter the protein sequence (press Enter when done):\n")
AELS
AE
}
tryCatch({
protein_weight <- calculate_protein_weight(protein_sequence)
cat("Molecular weight of the protein:", protein_weight, "Daltons\n")
}, error = function(e) {
cat("Error:", e$message, "\n")
})
repeat {
cat("\nEnter the protein sequence (press Enter when done):\n")
protein_sequence <- readline()
# Check if the user wants to quit
if (tolower(protein_sequence) == "quit") {
cat("Exiting the program. Goodbye!\n")
break
}
tryCatch({
protein_weight <- calculate_protein_weight(protein_sequence)
cat("Molecular weight of the protein:", protein_weight, "Daltons\n")
}, error = function(e) {
cat("Error:", e$message, "\n")
})
}
cat("Error:", e$message, "\n")
tryCatch({
protein_weight <- calculate_protein_weight(protein_sequence)
cat("Molecular weight of the protein:", protein_weight, "Daltons\n")
}, error = function(e) {
cat("Error:", e$message, "\n")
})
cat("\nEnter the protein sequence or type 'quit' to exit:\n")
GIVEQCCTSIC
protein_sequence <- readline()
cat("Exiting the program. Goodbye!\n")
break
cat("\nEnter the protein sequence or type 'quit' to exit:\n")
GIVEQCCTSIC
cat("Exiting the program. Goodbye!\n")
break
repeat {
cat("\nEnter the protein sequence or type 'quit' to exit:\n")
protein_sequence <- readline()
if (tolower(protein_sequence) == "quit") {
cat("Exiting the program. Goodbye!\n")
break
}
tryCatch({
protein_weight <- calculate_protein_weight(protein_sequence)
cat("Molecular weight of the protein:", protein_weight, "Daltons\n")
}, error = function(e) {
cat("Error:", e$message, "\n")
})
}
star()
start()
restart()
restart()
restart()
restartcalc()
#restart function
repeat {
cat("\nEnter the protein sequence or type 'quit' to exit:\n")
protein_sequence <- readline()
if (tolower(protein_sequence) == "quit") {
cat("Exiting the program. Goodbye!\n")
break
}
tryCatch({
protein_weight <- calculate_protein_weight(protein_sequence)
cat("Molecular weight of the protein:", protein_weight, "Daltons\n")
}, error = function(e) {
cat("Error:", e$message, "\n")
})
}
# Input and plot
repeat {
cat("\nEnter the protein sequence or type 'quit' to exit:\n")
protein_sequence <- readline()
print(plot_aa_sequence(protein_sequence))  # Use print() to show plot
if (tolower(protein_sequence) == "quit") {
cat("Exiting the program. Goodbye!\n")
break
}
# Display protien weight
tryCatch({
protein_weight <- calculate_protein_weight(protein_sequence)
cat("Molecular weight of the protein:", protein_weight, "Daltons\n")
}, error = function(e) {
cat("Error:", e$message, "\n")
})
}
# Input and plot
repeat {
cat("\nEnter the protein sequence or type 'quit' to exit:\n")
protein_sequence <- readline()
print(plot_aa_sequence(protein_sequence))  # Use print() to show plot
if (tolower(protein_sequence) == "quit") {
cat("Exiting the program. Goodbye!\n")
break
}
# Display protien weight
tryCatch({
protein_weight <- calculate_protein_weight(protein_sequence)
cat("Molecular weight of the protein:", protein_weight, "Daltons\n")
}, error = function(e) {
cat("Error:", e$message, "\n")
})
}
# Input and plot
repeat {
cat("\nEnter the protein sequence or type 'quit' to exit:\n")
protein_sequence <- readline()
print(plot_aa_sequence(protein_sequence))  # Use print() to show plot
if (tolower(protein_sequence) == "quit") {
cat("Exiting the program. Goodbye!\n")
break
}
# Display protien weight
tryCatch({
protein_weight <- calculate_protein_weight(protein_sequence)
cat("Molecular weight of the protein:", protein_weight, "Daltons\n")
}, error = function(e) {
cat("Error:", e$message, "\n")
})
}
# Input and plot
repeat {
cat("\nEnter the protein sequence or type 'quit' to exit:\n")
protein_sequence <- readline()
print(plot_aa_sequence(protein_sequence))  # Use print() to show plot
if (tolower(protein_sequence) == "quit") {
cat("Exiting the program. Goodbye!\n")
break
}
# Display protien weight
tryCatch({
protein_weight <- calculate_protein_weight(protein_sequence)
cat("Molecular weight of the protein:", protein_weight, "Daltons\n")
}, error = function(e) {
cat("Error:", e$message, "\n")
})
}
# Input and plot
repeat {
cat("\nEnter the protein sequence or type 'quit' to exit:\n")
protein_sequence <- readline()
#Source Amino_Plot.R
source("C:\\Users\\alanp\\OneDrive - Temple University\\Desktop\\Projects\\Protein-Molecular-Weight\\Amino_Plot.R", local = FALSE)
if (tolower(protein_sequence) == "quit") {
cat("Exiting the program. Goodbye!\n")
break
}
# Display protein weight
tryCatch({
protein_weight <- calculate_protein_weight(protein_sequence)
cat("Molecular weight of the protein:", protein_weight, "Daltons\n")
}, error = function(e) {
cat("Error:", e$message, "\n")
})
}
shiny::runApp('C:/Users/alanp/OneDrive - Temple University/Desktop/Projects/Protein-Molecular-Weight')
